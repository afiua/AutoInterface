{
  "uid" : "48bab73b1c134296",
  "name" : "test_getxnumber[getxnumber2]",
  "fullName" : "testcase.test_getxnumber.TestGetxnumber#test_getxnumber",
  "historyId" : "cbe015b1592a75b55caefdc31ce01c41",
  "time" : {
    "start" : 1631607746514,
    "stop" : 1631607746576,
    "duration" : 62
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <test_getxnumber.TestGetxnumber object at 0x0000025C3426EAF0>\ngetxnumber = ['case3', 'http://apicone.che168.com/config/getxnumber', 'get', {}, {'_appid': '2scapp.ios', 'fromtype': 3, 'producttype': 1}, {'xnumber': 4008302549}]\n\n    @allure.feature('TestGetxnumber')\n    @allure.severity('blocker')\n    def test_getxnumber(self,getxnumber):\n        assertt = assertion.Assertion()\n        self.case_name = getxnumber[0]\n        self.path = getxnumber[1]\n        self.method = getxnumber[2]\n        self.cookies = getxnumber[3]\n        self.query = getxnumber[4]\n        self.chcek_result = getxnumber[5]\n        result = HttpRequest().send_request(self.method, self.path, self.query,self.cookies)  # 根据Excel中的method调用run_main来进行requests请求，并拿到响应\n    \n        #下面自己补充断言或者其他验证数据的逻辑即可\n        print(type(self.chcek_result['xnumber']))\n        print(type(result['result']['xnumber']))\n>       assertt.assert_common(self.chcek_result['xnumber'], result['result']['xnumber'])\n\ntestcase\\test_getxnumber.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.assertion.Assertion object at 0x0000025C340D0910>\nexpectmsg = 4008302549, resultmsg = '4008302549'\n\n    def assert_common(self, expectmsg, resultmsg):\n        #验证是否相等\n        try:\n>           assert expectmsg == resultmsg\nE           AssertionError\n\ncommon\\assertion.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "getxnumber",
    "time" : {
      "start" : 1631607746513,
      "stop" : 1631607746513,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <test_getxnumber.TestGetxnumber object at 0x0000025C3426EAF0>\ngetxnumber = ['case3', 'http://apicone.che168.com/config/getxnumber', 'get', {}, {'_appid': '2scapp.ios', 'fromtype': 3, 'producttype': 1}, {'xnumber': 4008302549}]\n\n    @allure.feature('TestGetxnumber')\n    @allure.severity('blocker')\n    def test_getxnumber(self,getxnumber):\n        assertt = assertion.Assertion()\n        self.case_name = getxnumber[0]\n        self.path = getxnumber[1]\n        self.method = getxnumber[2]\n        self.cookies = getxnumber[3]\n        self.query = getxnumber[4]\n        self.chcek_result = getxnumber[5]\n        result = HttpRequest().send_request(self.method, self.path, self.query,self.cookies)  # 根据Excel中的method调用run_main来进行requests请求，并拿到响应\n    \n        #下面自己补充断言或者其他验证数据的逻辑即可\n        print(type(self.chcek_result['xnumber']))\n        print(type(result['result']['xnumber']))\n>       assertt.assert_common(self.chcek_result['xnumber'], result['result']['xnumber'])\n\ntestcase\\test_getxnumber.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.assertion.Assertion object at 0x0000025C340D0910>\nexpectmsg = 4008302549, resultmsg = '4008302549'\n\n    def assert_common(self, expectmsg, resultmsg):\n        #验证是否相等\n        try:\n>           assert expectmsg == resultmsg\nE           AssertionError\n\ncommon\\assertion.py:16: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "848cc342c187cae8",
      "name" : "log",
      "source" : "848cc342c187cae8.txt",
      "type" : "text/plain",
      "size" : 520
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "feature",
    "value" : "TestGetxnumber"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_getxnumber"
  }, {
    "name" : "subSuite",
    "value" : "TestGetxnumber"
  }, {
    "name" : "host",
    "value" : "AT7229-1"
  }, {
    "name" : "thread",
    "value" : "58240-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_getxnumber"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "getxnumber",
    "value" : "['case3', 'http://apicone.che168.com/config/getxnumber', 'get', {}, {'_appid': '2scapp.ios', 'fromtype': 3, 'producttype': 1}, {'xnumber': 4008302549}]"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "48bab73b1c134296.json",
  "parameterValues" : [ "['case3', 'http://apicone.che168.com/config/getxnumber', 'get', {}, {'_appid': '2scapp.ios', 'fromtype': 3, 'producttype': 1}, {'xnumber': 4008302549}]" ]
}